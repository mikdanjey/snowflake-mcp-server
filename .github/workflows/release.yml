name: Release

on:
  release:
    types: [published]

env:
  NODE_VERSION: "20"

permissions:
  contents: write

jobs:
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run full validation
        run: npm run validate

      - name: Build for production
        run: npm run build:prod

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    name: Create GitHub Release Assets
    runs-on: ubuntu-latest
    needs: publish-npm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build:prod

      - name: Create release archive
        run: |
          tar -czf snowflake-mcp-server-${{ github.ref_name }}.tar.gz \
            dist/ \
            package.json \
            README.md \
            LICENSE

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: snowflake-mcp-server-${{ github.ref_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
